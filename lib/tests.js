// Generated by CoffeeScript 1.9.0
(function() {
  var CND, H, alert, badge, debug, echo, handle, help, info, log, rpr, settings, test, urge, warn, whisper;

  CND = require('cnd');

  rpr = CND.rpr.bind(CND);

  badge = 'HOTMETAL/tests';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  test = require('guy-test');

  H = require('..');

  handle = function(handler) {
    return function(error, result) {
      if (error != null) {
        throw error;
      }
      return handler(result);
    };
  };

  this["Line breaking 2"] = function(T, done) {
    var count, html, match, set_line, test_line;
    count = 0;
    test_line = function(html) {
      count += 1;
      return html.length < 30;
    };
    set_line = function(html) {
      return help(html);
    };
    html = "https://www.google.de/search?q=a+very+long+URL&ie=utf-8&oe=utf-8&gws_rd=cr&ei=4TjpVP3AC8GcPPq1gfgE";
    match = ["https://​www.google.de/​", "search?q=a+very+long", "+URL&amp;ie=utf-8&amp;oe=utf-8&amp;gws_rd=cr&amp;ei=4TjpVP3AC8GcP-", "Pq1gfgE"];
    return H.break_lines(html, test_line, set_line, handle((function(_this) {
      return function(lines) {
        T.eq(match, lines);
        return done();
      };
    })(this)));
  };

  this["Line breaking 3"] = function(T, done) {
    var html, match, set_line, test_line;
    test_line = function(html) {
      return html.length < 10;
    };
    set_line = function(html) {};
    html = "https://www.google.de/search?q=a+very+long+URL&ie=utf-8&oe=utf-8&gws_rd=cr&ei=4TjpVP3AC8GcPPq1gfgE";
    match = ["https://​", "www.google.de/​", "search?", "q=a+very", "+long", "+URL&amp;ie=utf-8&amp;oe=utf-8&amp;gws_rd=cr&amp;ei=4TjpVP3AC8GcP-", "Pq1gfgE"];
    return H.break_lines(html, test_line, set_line, handle((function(_this) {
      return function(lines) {
        urge(JSON.stringify(lines));
        T.eq(match, lines);
        return done();
      };
    })(this)));
  };

  settings = null;

  test(this, settings);

}).call(this);
